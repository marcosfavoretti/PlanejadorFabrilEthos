services:
  # Backend Services (from planejamento-ethos/docker-compose.yml)
  api:
    container_name: planejamento_ethos_api
    build:
      context: ./planejamento-ethos # Usa o Dockerfile na raiz do projeto backend
      target: production
    image: planejamentoethos:latest
    # A diretiva 'env_file' foi REMOVIDA daqui.
    # As variáveis serão injetadas pelo Jenkins ou pelo docker-compose.override.yml
    ports:
      - "${API_PORT}:${API_PORT}"
    command: ["node", "dist/apps/planejamento-ethos/main.js"]
    depends_on:
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9279/api/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  worker:
    container_name: planejamento_ethos_worker
    build:
      context: ./planejamento-ethos
      target: production
    image: planejamentoethos:latest
    command: ["node", "dist/apps/planeja-worker/main.js"]
    depends_on:
      api:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

  importador:
    container_name: planejamento_ethos_importador
    build:
      context: ./planejamento-ethos
      target: production
    image: planejamentoethos:latest
    command: ["node", "dist/apps/importa-pedido/main.js"]
    depends_on:
      api:
        condition: service_healthy
      redis:
        condition: service_started
    restart: on-failure

  redis:
    container_name: app_redis
    image: redis:alpine
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  # Frontend Service (PlanejamentoEthosPortal)
  frontend:
    container_name: planejamento_ethos_frontend
    build:
      context: ./PlanejamentoEthosPortal
      dockerfile: Dockerfile
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    depends_on:
      api:
        condition: service_healthy
    restart: always
